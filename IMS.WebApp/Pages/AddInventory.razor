@page "/addinventory"

@inject IAddInventoryUseCase addInventoryUseCase
@inject NavigationManager navigationManager

<h3>Add Inventory</h3>

<EditForm Model="inventory" OnValidSubmit="saveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText id="name" class="form-control" @bind-Value="inventory.InventoryName"></InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" class="form-control" @bind-Value="inventory.Quantity"></InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" class="form-control" @bind-Value="inventory.Price"></InputNumber>
    </div>

    <button type="submit" class="btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel"></button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();

    private async Task saveInventory()
    {
        await addInventoryUseCase.ExecuteAsync(inventory);
        navigationManager.NavigateTo("/inventories");
    }

    private void Cancel()
    {
        navigationManager.NavigateTo("/inventories");
    }
}
